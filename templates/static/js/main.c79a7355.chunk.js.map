{"version":3,"sources":["Pages/basePage.js","Apps/SNeRatio/Pages/leftColumn.js","Apps/SNeRatio/Pages/middleColumn.js","Apps/SNeRatio/Pages/rightColumn.js","Apps/SNeRatio/App.js","Pages/errorPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBarTop","props","setTitle","title","setState","state","class","id","type","data-toggle","data-target","to","href","this","React","Component","NavBarBottom","LeftColumn","item_list","remove_extension","render_list","item","push","slice","onChange","handleOptions","fillSelection","options","Ia_table","cc_table","cc_imf","cc_mass_range","solar_table","ref_element","sigma","MiddleColumn","img_data","getPlotArea","src","alt","value","getStatus","scope","style","height","getResults","chi_squared","dof","ratio","name","readOnly","onClick","fitMethod","disabled","fitLoopMethod","alert","getDetailedResults","allElements","RightColumn","checkboxHandle","event","checked","target","e","chb","val","err","setElements","handleValueChange","reset","Object","keys","map","s","startsWith","generate_row","fillElements","empty_state","SNeRatioPage","useState","setOptions","selections","setSelections","elements","results","setResults","plotArea","setPlotArea","status","setStatus","loopStarted","setLoopStarted","setLoopDone","useEffect","fetch","then","response","ok","json","info","checkBeforeFit","_statusText","_ref_element_index","_ref_element","_elementCount","statusUpdater","console","log","task_done","setTimeout","className","obj_id","index","indexOf","_check","_checkResult","requestOptions","method","headers","body","JSON","stringify","data","catch","error","fit","requestOptions_loop","fit_loop","fit_results","fit_results_text","getElements","dict","prevState","assign","Error","App","charset","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c79a7355.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport class NavBarTop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {title: ''}\n    }\n\n    setTitle = (title) => {\n        if(title !== '') {\n            this.setState({title: title})\n        }\n    }\n\n    render() {\n        return(\n            <div class=\"row\" id=\"navbar_row\">\n                <div class=\"col-md-12\">\n                    <nav class=\"container-fullwidth navbar navbar-expand-md navbar-dark bg-dark\">\n                        <a class=\"navbar-brand\">k.</a>\n                        <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n                            <span class=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\n                            <div class=\"navbar-nav\">\n                                <Link to='/' class=\"nav-item nav-link active\">Home</Link>\n                                <a href='/' class=\"nav-item nav-link\">About</a>\n                                <div class=\"nav-item dropdown\">\n                                    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Apps</a>\n                                    <div class=\"dropdown-menu\">\n                                        <Link to='/' class=\"dropdown-item\">Main Page</Link>\n                                        <Link to='/sneratio' class=\"dropdown-item\">SNeRatio</Link>\n                                        <Link to='/sneratio' class=\"dropdown-item\">SOAD</Link>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"navbar-nav\">\n                                <a href=\"#\" class=\"navbar-brand\">{ this.state.title }</a>\n                            </div>\n\n                            <div class=\"navbar-nav\">\n                                <a href=\"#\" class=\"nav-item nav-link\">Login</a>\n                            </div>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport class NavBarBottom extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div class=\"row\" id=\"bottom_navbar_row\">\n                <div class=\"col-md-12\">\n                    <nav class=\"container-fullwidth navbar navbar-expand-md navbar-dark bg-dark\">\n                        <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\n                            <div class=\"navbar-nav\">\n                                <a href=\"#\" class=\"nav-item nav-link\">Copyright</a>\n                            </div>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\n\nclass LeftColumn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    fillSelection(item_list, title, id, remove_extension=false) {   \n        const render_list = [];\n    \n        if(remove_extension == true) {\n            for (let item of item_list) {\n                render_list.push(<option key={item.slice(0,-4)}>{item.slice(0,-4)}</option>);\n            } \n        } else {\n            for (let item of item_list) {\n                render_list.push(<option key={item}>{item}</option>);\n            } \n        }\n    \n        return(\n            <div>\n                <label class=\"custom-select-label m-1\">{title}</label>\n                <select class=\"custom-select custom-select-sm\" id={id}>\n                    {render_list}\n                </select>\n            </div>\n        )\n    }\n\n    render() {\n        return(\n            <div>\n                <form onChange={this.props.handleOptions}>\n                    <p id=\"selections_header\" class=\"m-4 text-center\">Selections</p>\n\n                    <hr class=\"mt-3 mb-3\"/>\n\n                    {this.fillSelection(this.props.options.Ia_table, 'SNIa - Model', 'Ia_table', true)}\n\n                    <hr class=\"mt-3 mb-3\"/>\n\n                    {this.fillSelection(this.props.options.cc_table, 'SNcc - Model', 'cc_table', true)}\n                    {this.fillSelection(this.props.options.cc_imf, 'SNcc - IMF', 'cc_imf')}\n                    {this.fillSelection(this.props.options.cc_mass_range, 'SNcc - Mass Range', 'cc_mass_range')}\n\n                    <hr class=\"mt-3 mb-3\"/>\n\n                    {this.fillSelection(this.props.options.solar_table, 'Solar Table', 'solar_table', true)}\n                    {this.fillSelection(this.props.options.ref_element, 'Reference Element', 'ref_element')}\n                    {this.fillSelection(this.props.options.sigma, 'Confidence', 'sigma')}\n\n                    {/* <hr class=\"mt-3 mb-3\"/>\n\n                    <form action=\"/load\" method=\"POST\">\n                    <label class=\"m-1\" for=\"load_data\">Load Data</label>\n                        <div class=\"custom-file mb-2\">\n                            <input type=\"file\" class=\"custom-file-input\" id=\"load_data\"/>\n                            <label class=\"custom-file-label\" for=\"load_data\"></label>\n                        </div>\n                    </form> */}\n\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default LeftColumn;","import React from 'react';\n\n\nclass MiddleColumn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {img_data: \"\"};\n    }\n\n    componentDidMount() {\n        this.setState({img_data: this.props.getPlotArea().img_data})\n    }\n\n    render() {\n        return(\n            <div>\n\n                <center>\n                <div id=\"image_div\" class=\"row box center mt-3\">\n                    <div class=\"col-md-12 text-center\">\n                        <img src={\"data:image/png;base64,\" + this.props.getPlotArea().img_data} alt=\"Fit Image\"/>\n                    </div>\n                </div>\n                </center>\n\n\n                <div class=\"row input-group input-group-sm m-1 mr-2 mt-2\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">Status</span>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" id=\"status\" value={this.props.getStatus()}/>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-md-8 text-center\">\n                        <div class=\"custom-form\">\n                            <table id=\"middle_table\" class=\"table table-sm table-hover table-inverse table-responsive-sm\">\n                                <tbody>\n                                    <tr>\n                                        <td scope=\"row\" class=\"text-center align-middle\">Chi-Squared</td>\n                                        <td><input type=\"text\" style={{height: \"2em\"}} class=\"form-control\" id=\"val_chi\" value={this.props.getResults().chi_squared}/></td>\n                                    </tr>\n\n                                    <tr>\n                                        <td scope=\"row\" class=\"text-center align-middle\">D.o.f.</td>\n                                        <td><input type=\"text\" style={{height: \"2em\"}} class=\"form-control\" id=\"val_dof\" value={this.props.getResults().dof}/></td>\n                                    </tr>\n\n                                    <tr>\n                                        <td scope=\"row\" class=\"text-center align-middle\">Ratio %</td>\n                                        <td><input type=\"text\" style={{height: \"2em\"}} class=\"form-control\" id=\"val_ratio\" value={this.props.getResults().ratio}/></td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-4 text-center\">\n\n                        <table id=\"middle_table_\" class=\"table table-sm table-hover table-inverse table-responsive-sm\">\n                            <tbody>\n                                <tr>\n                                    <td scope=\"row\">\n                                        <form name=\"fit\">\n                                            <input class=\"btn btn-dark btn-sm btn-block\" id=\"btn_fit\" value=\"Fit\" readOnly={true} onClick={this.props.fitMethod}/>\n                                        </form>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td scope=\"row\">\n                                        <form name=\"fit_loop\">\n                                            <input class=\"btn btn-dark btn-sm btn-block\" id=\"btn_fit_loop\" value=\"Fit All\" readOnly={true} disabled={true} onClick={this.props.fitLoopMethod}/>\n                                        </form>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td scope=\"row\">\n                                        <button id=\"btn_detailed_results\" type=\"button\" class=\"btn btn-dark btn-sm btn-block\" readOnly={true} onClick={() => {alert(this.props.getDetailedResults())}}>Detailed Results</button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default MiddleColumn;\n","import React from 'react';\n\n\nconst allElements = ['C', 'N', 'O', 'Ne', 'Mg', 'Al', 'Si', 'S', 'Ar', 'Ca', 'Fe', 'Ni']\n\n\nclass RightColumn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\"chb_C\": 0, \"val_C\": \"\", \"err_C\": \"\",\n                      \"chb_N\": 0, \"val_N\": \"\", \"err_N\": \"\",\n                      \"chb_O\": 0, \"val_O\": \"\", \"err_O\": \"\",\n                      \"chb_Ne\": 0, \"val_Ne\": \"\", \"err_Ne\": \"\",\n                      \"chb_Mg\": 0, \"val_Mg\": \"\", \"err_Mg\": \"\",\n                      \"chb_Al\": 0, \"val_Al\": \"\", \"err_Al\": \"\",\n                      \"chb_Si\": 0, \"val_Si\": \"\", \"err_Si\": \"\",\n                      \"chb_S\": 0, \"val_S\": \"\", \"err_S\": \"\",\n                      \"chb_Ar\": 0, \"val_Ar\": \"\", \"err_Ar\": \"\",\n                      \"chb_Ca\": 0, \"val_Ca\": \"\", \"err_Ca\": \"\",\n                      \"chb_Fe\": 0, \"val_Fe\": \"\", \"err_Fe\": \"\",\n                      \"chb_Ni\": 0, \"val_Ni\": \"\", \"err_Ni\": \"\"};\n    }\n\n    checkboxHandle = (event) => {\n        let checked = event.target.checked;\n        let e = event.target.value;\n\n        let chb = \"chb_\" + e;\n        let val = \"val_\" + e;\n        let err = \"err_\" + e;\n\n        if(checked == 1) {\n            this.props.setElements({[chb]: 1});\n            this.props.setElements({[val]: \"1.0\"});\n            this.props.setElements({[err]: \"0.1\"});\n\n            this.setState({[chb]: 1});\n            this.setState({[val]: \"1.0\"});\n            this.setState({[err]: \"0.1\"});\n        } else {\n            this.props.setElements({[chb]: 0});\n            this.props.setElements({[val]: \"\"});\n            this.props.setElements({[err]: \"\"});\n\n            this.setState({[chb]: 0});\n            this.setState({[val]: \"\"});\n            this.setState({[err]: \"\"});\n        }\n    }\n\n    handleValueChange = (event) => {\n        let id = event.target.id;\n        let val = event.target.value;\n\n        this.props.setElements({ [id]: val });\n        this.setState({ [id]: val });\n    }\n\n    reset = () => {\n        Object.keys(this.state).map(\n            s => {\n                if(s.startsWith(\"chb_\")) {\n                    this.props.setElements({[s]: 0});\n                    this.setState({ [s]: 0 });\n                } else {\n                    this.props.setElements({[s]: \"\"});\n                    this.setState({ [s]: \"\" });\n                }\n            });\n    }\n\n    fillElements() {\n        const render_list = [];\n\n        let generate_row = (e) => {\n            let chb = \"chb_\" + e;\n            let val = \"val_\" + e;\n            let err = \"err_\" + e;\n\n            return(\n                <tr class=\"table-row row\" key={e}>\n                    <td class=\"text-left align-middle col-3\">\n                        <label class=\"custom-control\">\n                            <input type=\"checkbox\" id={chb} value={e} onChange={this.checkboxHandle} checked={this.state[chb]}/>{e}\n                        </label>\n                    </td>\n\n                    <td scope=\"col\" class=\"col-3 text-center\">\n                        <input type=\"text\" class=\"myBox form-control\" id={val} disabled={!this.state[chb]} value={this.state[val]} onChange={this.handleValueChange}/>\n                    </td>\n\n                    <td scope=\"col\" class=\"text-center align-middle col-3\">\n                        <label>+/-</label>\n                    </td>\n\n                    <td scope=\"col\" class=\"col-3 text-center\">\n                        <input type=\"text\" class=\"myBox form-control\" id={err} disabled={!this.state[chb]} value={this.state[err]} onChange={this.handleValueChange}/>\n                    </td>\n                </tr>\n            )\n        }\n\n        for (let e of allElements) {\n            render_list.push(generate_row(e));\n        }\n\n        return(\n            <table id={\"element_table\"} class=\"flex-container table table-sm table-hover table-inverse table-responsive mt-2\">\n                <thead class=\"thead-inverse\">\n                    <tr class=\"table-row row\">\n                        <th class=\"col-3\"> </th>\n                        <th class=\"col-3\">Value</th>\n                        <th class=\"col-3\"></th>\n                        <th class=\"col-3\">Error</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {render_list}\n                </tbody>\n            </table>\n        )\n    }\n\n    render() {\n        return(\n            <div>\n                <form>\n\n                    <p id=\"elements_header\" class=\"m-4 text-center\">Abundance Values</p>\n\n\n                    {this.fillElements()}\n\n                <hr></hr>\n\n                    <input class=\"btn btn-dark btn-sm btn-block mb-3\" id=\"btn_reset\" value=\"Reset\" readOnly={true} onClick={this.reset}/>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default RightColumn;\n","import './App.css';\n\nimport React, { useState, useEffect } from 'react';\n\nimport LeftColumn from './Pages/leftColumn'\nimport MiddleColumn from './Pages/middleColumn'\nimport RightColumn from './Pages/rightColumn'\n\n\nlet empty_state = {\n    \"elements\": {\n        \"abund\": [],\n        \"abund_err\": [],\n        \"element\": []\n    },\n    \"options\": {\n        \"Ia_table\": [],\n        \"cc_imf\": [],\n        \"cc_mass_range\": [],\n        \"cc_table\": [],\n        \"input_data\": [],\n        \"mass_number_table\": [],\n        \"ref_element\": [],\n        \"sigma\": [],\n        \"solar_table\": []\n    },\n    \"results\": {\n        \"fit_results\": {\n            \"chi_squared\": \"\",\n            \"dof\": \"\",\n            \"ratio\": \"\"\n        },\n        \"fit_results_text\": \"\",\n        \"min_elements_selected\": false,\n        \"ref_element_selected\": false\n    },\n    \"selections\": {\n        \"Ia_table\": 0,\n        \"cc_imf\": 0,\n        \"cc_mass_range\": 0,\n        \"cc_table\": 0,\n        \"input_data\": 0,\n        \"mass_number_table\": 0,\n        \"ref_element\": 0,\n        \"sigma\": 0,\n        \"solar_table\": 0\n    }\n}\n\n// let allElements = ['C', 'N', 'O', 'Ne', 'Mg', 'Al', 'Si', 'S', 'Ar', 'Ca', 'Fe', 'Ni']\n\nexport const SNeRatioPage = ()=> {\n    const [options, setOptions] = useState(empty_state.options)\n    const [selections, setSelections] = useState(empty_state.selections)\n\n    const [elements, setElements] = useState({\n        \"chb_C\": 0, \"val_C\": \"\", \"err_C\": \"\",\n        \"chb_N\": 0, \"val_N\": \"\", \"err_N\": \"\",\n        \"chb_O\": 0, \"val_O\": \"\", \"err_O\": \"\",\n        \"chb_Ne\": 0, \"val_Ne\": \"\", \"err_Ne\": \"\",\n        \"chb_Mg\": 0, \"val_Mg\": \"\", \"err_Mg\": \"\",\n        \"chb_Al\": 0, \"val_Al\": \"\", \"err_Al\": \"\",\n        \"chb_Si\": 0, \"val_Si\": \"\", \"err_Si\": \"\",\n        \"chb_S\": 0, \"val_S\": \"\", \"err_S\": \"\",\n        \"chb_Ar\": 0, \"val_Ar\": \"\", \"err_Ar\": \"\",\n        \"chb_Ca\": 0, \"val_Ca\": \"\", \"err_Ca\": \"\",\n        \"chb_Fe\": 0, \"val_Fe\": \"\", \"err_Fe\": \"\",\n        \"chb_Ni\": 0, \"val_Ni\": \"\", \"err_Ni\": \"\"})\n\n    const [results, setResults] = useState(empty_state.results)\n    const [plotArea, setPlotArea] = useState(\"\")\n    const [status, setStatus] = useState(\"Welcome to the SNeRatio App..\")\n\n    const [loopStarted, setLoopStarted] = useState(false)\n    const [loopDone, setLoopDone] = useState(true)\n\n    useEffect(()=> {\n        fetch('/sneratio/get_info').then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(info => {\n            setOptions(info.options);\n            setSelections(info.selections);\n\n            // setElements(info.elements);\n            setResults(empty_state.results);\n        })\n\n        fetch('/sneratio/get_empty_plot').then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(img_data => {\n            setPlotArea(img_data);\n        })\n\n    },[])\n\n\n    const checkBeforeFit = () => {\n\n        // check ref element\n        let _checkResult = false;\n        let _statusText = \"\";\n\n        let _ref_element_index = selections[\"ref_element\"];\n        let _ref_element = options[\"ref_element\"][_ref_element_index];\n        let _chb_ref_element = \"chb_\" + _ref_element;\n\n        if (elements[_chb_ref_element] == 1) {\n            _checkResult = true;\n        } else {\n            _checkResult = false;\n            _statusText = \"Warning: Reference element should be selected! (\" + _ref_element + \")\";\n\n            return [_checkResult, _statusText]\n        }\n\n        // check number of selected elements\n        let _elementCount = 0;\n\n        for (let val in elements) {\n            if(val.startsWith(\"chb_\")) {\n                if(elements[val] === 1) {\n                    _elementCount += 1;\n                }\n            }\n        }\n\n        if(_elementCount >= 3) {\n            _checkResult = true;\n        } else {\n            _checkResult = false;\n            _statusText = \"Warning: At least three (3) elements should be selected! (Current: \" + _elementCount + \")\";\n\n            return [_checkResult, _statusText]\n        }\n\n        // // check abundance and error values\n        // for (let key in elements) {\n        //     if(!key.startsWith(\"chb_\") && elements[key] != \"\") {\n        //         let _number = parseFloat(elements[key]);\n        //         if(_number == NaN) {\n        //             _checkResult = false;\n        //             _statusText = \"Warning: Invalid input value! (\" + elements[key] + \")\";\n        //\n        //             return [_checkResult, _statusText]\n        //         }\n        //     } else {\n        //         _checkResult = true;\n        //     }\n        // }\n\n        return [_checkResult, _statusText]\n    }\n\n\n    const fit = () => {\n        let _check = checkBeforeFit();\n        let _checkResult = _check[0];\n        let _statusText = _check[1];\n\n        if(_checkResult === false) {\n\n          setStatus(_statusText);\n\n        } else {\n\n          const url = '/sneratio/fit'\n          const requestOptions = {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ selections: selections, elements: elements })\n          };\n          fetch(url, requestOptions)\n              .then(response => response.json())\n              .then(data => {\n                  setPlotArea({img_data: data.img_data});\n                  setResults(data.results);\n                  setStatus(data.status);\n              })\n              .catch(error => console.log('Form submit error', error))\n\n        }\n    }\n\n\n    const get_fit_loop_result = () => {\n        console.log('get_fit_loop_result');\n        fetch('/sneratio/get_fit_loop_result')\n            .then((response) => response.json())\n            .then(info => {\n                setPlotArea({img_data: info.img_data});\n                setStatus(info.status);\n                setLoopStarted(false);\n            });\n    }\n\n\n    const statusUpdater = () => {\n        console.log('statusUpdater');\n        fetch('/sneratio/check_fit_loop')\n        .then((response) => response.json())\n        .then(info => {\n            setLoopDone(info.task_done);\n\n            if(info.task_done === true) {\n              setPlotArea({img_data: info.img_data});\n              setStatus(info.status);\n              setLoopStarted(false);\n              get_fit_loop_result();\n            } else {\n              setStatus(info.status);\n              setTimeout(statusUpdater, 3000);\n            }\n        });\n    }\n\n\n    const fit_loop = () => {\n        let _check = checkBeforeFit();\n        let _checkResult = _check[0];\n        let _statusText = _check[1];\n\n        if(_checkResult === false) {\n\n          setStatus(_statusText);\n\n        } else {\n\n            if(loopStarted == false) {\n                console.log('fit_loop');\n                const url_loop = '/sneratio/start_fit_loop'\n                const requestOptions_loop = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ selections: selections, elements: elements })\n                };\n                fetch(url_loop, requestOptions_loop)\n                    .then(response => response.json())\n                    .then(info => {\n                        setPlotArea({img_data: info.img_data});\n                        setResults(info.results);\n                        setStatus(info.status);\n\n                        setLoopStarted(true)\n                        setLoopDone(false)\n                        // setResults(empty_state.results)\n\n                        statusUpdater()\n                    })\n                    .catch(error => console.log('Form submit error', error))\n            }\n        }\n    }\n\n    const handleOptions = (event) => {\n        let obj_id = event.target.id;\n        let val = event.target.value\n\n        if(obj_id==='Ia_table' || obj_id==='cc_table' || obj_id==='solar_table') {\n            val += '.txt';\n            console.log(val);\n        }\n\n        let index = options[obj_id].indexOf(val);\n        selections[obj_id] = index;\n    }\n\n    const getElements = (val) => {\n        return elements[val]\n    }\n\n    const updateElements = (dict) => {\n        setElements(prevState => {\n            return Object.assign({}, prevState, dict);\n        });\n    }\n\n    const sendPlotArea = () => {\n        return plotArea\n    }\n\n    const sendResults = () => {\n        return results.fit_results\n    }\n\n    const sendDetailedResults = () => {\n        return results.fit_results_text\n    }\n\n    const sendStatus = () => {\n        return status\n    }\n\n\n    return(\n        <>\n            <div className=\"App\">\n\n                <div class=\"container-fluid\" id=\"main_container\">\n\n                    <div class=\"row container-fullwidth\" id=\"content_row\">\n\n                        <div id=\"left_column\" class=\"col-md-3\">\n                            <LeftColumn options={options} handleOptions={handleOptions}/>\n                        </div>\n\n                        <div id=\"middle_column\" class=\"col-md-6\">\n                            <MiddleColumn fitMethod={() => {fit()}} fitLoopMethod={() => {fit_loop()}} getPlotArea={sendPlotArea} getResults={sendResults} getDetailedResults={sendDetailedResults} getStatus={sendStatus}/>\n                        </div>\n\n                        <div id=\"right_column\" class=\"col-md-3\">\n                            <RightColumn getElements={getElements} setElements={updateElements}/>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\n\nexport class Error extends React.Component {\n    render() {\n        return(\n            <div>\n                <p>This is error page!</p>\n            </div>\n        )\n    }\n}\n","import './App.css';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { NavBarTop, NavBarBottom } from './Pages/basePage'\nimport IndexPage from './Pages/indexPage'\n\nimport { SNeRatioPage } from './Apps/SNeRatio/App'\n\nimport { Error } from './Pages/errorPage'\n\n\nfunction App() {\n\n  return (\n    <div>\n        <head>\n            <meta charset=\"utf-8\"/>\n            <title>M.K.Erdim</title>\n        </head>\n\n        <body>\n            <Router>\n                <NavBarTop/>\n\n                <Switch>\n                    <Route exact path=\"/\" component={SNeRatioPage}/>\n                    <Route exact path=\"/sneratio\" component={SNeRatioPage}/>\n                    <Route component={Error}/> // Error Page\n                </Switch>\n\n                <NavBarBottom/>\n            </Router>\n        </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}